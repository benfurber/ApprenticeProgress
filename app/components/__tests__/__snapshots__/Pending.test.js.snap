// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Loading has a valid snapshot when for an Error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Pending
    condition="Error"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Styled(ViewNB)
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 4,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        />,
        <Styled(ViewNB)
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 30,
              "paddingVertical": 10,
            }
          }
        >
          <Styled(H2)
            style={
              Object {
                "color": "#ED3E44",
              }
            }
          >
            Error
          </Styled(H2)>
        </Styled(ViewNB)>,
        <Styled(ViewNB)
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 4,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        />,
      ],
      "noRalph": true,
      "style": Object {
        "alignItems": "center",
        "flexDirection": "column",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "style": Object {
            "alignItems": "flex-end",
            "flex": 4,
            "flexDirection": "row",
            "justifyContent": "center",
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(H2)
            style={
              Object {
                "color": "#ED3E44",
              }
            }
          >
            Error
          </Styled(H2)>,
          "style": Object {
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingHorizontal": 30,
            "paddingVertical": 10,
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Error",
            "style": Object {
              "color": "#ED3E44",
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": "Error",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "style": Object {
            "alignItems": "flex-end",
            "flex": 4,
            "flexDirection": "row",
            "justifyContent": "center",
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(ViewNB)
            style={
              Object {
                "alignItems": "flex-end",
                "flex": 4,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          />,
          <Styled(ViewNB)
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingHorizontal": 30,
                "paddingVertical": 10,
              }
            }
          >
            <Styled(H2)
              style={
                Object {
                  "color": "#ED3E44",
                }
              }
            >
              Error
            </Styled(H2)>
          </Styled(ViewNB)>,
          <Styled(ViewNB)
            style={
              Object {
                "alignItems": "flex-end",
                "flex": 4,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          />,
        ],
        "noRalph": true,
        "style": Object {
          "alignItems": "center",
          "flexDirection": "column",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "style": Object {
              "alignItems": "flex-end",
              "flex": 4,
              "flexDirection": "row",
              "justifyContent": "center",
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(H2)
              style={
                Object {
                  "color": "#ED3E44",
                }
              }
            >
              Error
            </Styled(H2)>,
            "style": Object {
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 30,
              "paddingVertical": 10,
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Error",
              "style": Object {
                "color": "#ED3E44",
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "Error",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "style": Object {
              "alignItems": "flex-end",
              "flex": 4,
              "flexDirection": "row",
              "justifyContent": "center",
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Loading has a valid snapshot when for loading 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Pending
    condition="Loading"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Styled(ViewNB)
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 4,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <Dot
            delay={0}
          />
          <Dot
            delay={500}
          />
          <Dot
            delay={900}
          />
          <Dot
            delay={300}
          />
          <Dot
            delay={1200}
          />
        </Styled(ViewNB)>,
        <Styled(ViewNB)
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 30,
              "paddingVertical": 10,
            }
          }
        >
          <Styled(H2)>
            Loading
          </Styled(H2)>
        </Styled(ViewNB)>,
        <Styled(ViewNB)
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 4,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        />,
      ],
      "noRalph": true,
      "style": Object {
        "alignItems": "center",
        "flexDirection": "column",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Dot
              delay={0}
            />,
            <Dot
              delay={500}
            />,
            <Dot
              delay={900}
            />,
            <Dot
              delay={300}
            />,
            <Dot
              delay={1200}
            />,
          ],
          "style": Object {
            "alignItems": "flex-end",
            "flex": 4,
            "flexDirection": "row",
            "justifyContent": "center",
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "delay": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "delay": 500,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "delay": 900,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "delay": 300,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "delay": 1200,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(H2)>
            Loading
          </Styled(H2)>,
          "style": Object {
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingHorizontal": 30,
            "paddingVertical": 10,
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Loading",
            "virtual": undefined,
          },
          "ref": null,
          "rendered": "Loading",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "style": Object {
            "alignItems": "flex-end",
            "flex": 4,
            "flexDirection": "row",
            "justifyContent": "center",
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(ViewNB)
            style={
              Object {
                "alignItems": "flex-end",
                "flex": 4,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <Dot
              delay={0}
            />
            <Dot
              delay={500}
            />
            <Dot
              delay={900}
            />
            <Dot
              delay={300}
            />
            <Dot
              delay={1200}
            />
          </Styled(ViewNB)>,
          <Styled(ViewNB)
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingHorizontal": 30,
                "paddingVertical": 10,
              }
            }
          >
            <Styled(H2)>
              Loading
            </Styled(H2)>
          </Styled(ViewNB)>,
          <Styled(ViewNB)
            style={
              Object {
                "alignItems": "flex-end",
                "flex": 4,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          />,
        ],
        "noRalph": true,
        "style": Object {
          "alignItems": "center",
          "flexDirection": "column",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Dot
                delay={0}
              />,
              <Dot
                delay={500}
              />,
              <Dot
                delay={900}
              />,
              <Dot
                delay={300}
              />,
              <Dot
                delay={1200}
              />,
            ],
            "style": Object {
              "alignItems": "flex-end",
              "flex": 4,
              "flexDirection": "row",
              "justifyContent": "center",
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "delay": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "delay": 500,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "delay": 900,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "delay": 300,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "delay": 1200,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(H2)>
              Loading
            </Styled(H2)>,
            "style": Object {
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 30,
              "paddingVertical": 10,
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Loading",
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "Loading",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "style": Object {
              "alignItems": "flex-end",
              "flex": 4,
              "flexDirection": "row",
              "justifyContent": "center",
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
