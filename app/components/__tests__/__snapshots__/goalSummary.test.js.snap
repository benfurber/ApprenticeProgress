// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`goalSummary Has a valid snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GoalSummary
    data={
      Object {
        "description": "Hello world",
        "title": "Testing title",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Styled(CardItem)
          header={true}
        >
          <Styled(H3)>
            Testing title
          </Styled(H3)>
          <Styled(Badge)>
            <Styled(Text) />
          </Styled(Badge)>
        </Styled(CardItem)>,
        <Styled(CardItem)>
          <Styled(Body)>
            <Styled(Text)>
              Hello world
            </Styled(Text)>
          </Styled(Body)>
        </Styled(CardItem)>,
      ],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(H3)>
              Testing title
            </Styled(H3)>,
            <Styled(Badge)>
              <Styled(Text) />
            </Styled(Badge)>,
          ],
          "header": true,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Testing title",
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "Testing title",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text) />,
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": undefined,
                "virtual": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(Body)>
            <Styled(Text)>
              Hello world
            </Styled(Text)>
          </Styled(Body)>,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Text)>
              Hello world
            </Styled(Text)>,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Hello world",
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "Hello world",
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(CardItem)
            header={true}
          >
            <Styled(H3)>
              Testing title
            </Styled(H3)>
            <Styled(Badge)>
              <Styled(Text) />
            </Styled(Badge)>
          </Styled(CardItem)>,
          <Styled(CardItem)>
            <Styled(Body)>
              <Styled(Text)>
                Hello world
              </Styled(Text)>
            </Styled(Body)>
          </Styled(CardItem)>,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(H3)>
                Testing title
              </Styled(H3)>,
              <Styled(Badge)>
                <Styled(Text) />
              </Styled(Badge)>,
            ],
            "header": true,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Testing title",
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "Testing title",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Text) />,
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": undefined,
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Body)>
              <Styled(Text)>
                Hello world
              </Styled(Text)>
            </Styled(Body)>,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text)>
                Hello world
              </Styled(Text)>,
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Hello world",
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "Hello world",
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
