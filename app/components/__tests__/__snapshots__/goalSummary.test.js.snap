// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`goalSummary has a valid snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GoalSummary
    details={
      Object {
        "actions": Array [],
        "description": "Hello world",
        "score": 0,
        "tag": "One",
        "title": "Testing title",
      }
    }
    navigation={
      Object {
        "getParam": [Function],
        "navigate": [MockFunction],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "activeOpacity": 0.2,
      "children": <Styled(Card)>
        <Styled(CardItem)
          header={true}
        >
          <Styled(H3)>
            Testing title
             (
            0
            /5)
          </Styled(H3)>
        </Styled(CardItem)>
        <Styled(CardItem)>
          <Styled(Body)>
            <Styled(Badge)>
              <Styled(Text)>
                One
              </Styled(Text)>
            </Styled(Badge)>
          </Styled(Body)>
        </Styled(CardItem)>
      </Styled(Card)>,
      "onPress": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(CardItem)
            header={true}
          >
            <Styled(H3)>
              Testing title
               (
              0
              /5)
            </Styled(H3)>
          </Styled(CardItem)>,
          <Styled(CardItem)>
            <Styled(Body)>
              <Styled(Badge)>
                <Styled(Text)>
                  One
                </Styled(Text)>
              </Styled(Badge)>
            </Styled(Body)>
          </Styled(CardItem)>,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(H3)>
              Testing title
               (
              0
              /5)
            </Styled(H3)>,
            "header": true,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "Testing title",
                " (",
                0,
                "/5)",
              ],
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Array [
              "Testing title",
              " (",
              0,
              "/5)",
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Body)>
              <Styled(Badge)>
                <Styled(Text)>
                  One
                </Styled(Text)>
              </Styled(Badge)>
            </Styled(Body)>,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Badge)>
                <Styled(Text)>
                  One
                </Styled(Text)>
              </Styled(Badge)>,
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Text)>
                  One
                </Styled(Text)>,
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "One",
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "One",
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeOpacity": 0.2,
        "children": <Styled(Card)>
          <Styled(CardItem)
            header={true}
          >
            <Styled(H3)>
              Testing title
               (
              0
              /5)
            </Styled(H3)>
          </Styled(CardItem)>
          <Styled(CardItem)>
            <Styled(Body)>
              <Styled(Badge)>
                <Styled(Text)>
                  One
                </Styled(Text)>
              </Styled(Badge)>
            </Styled(Body)>
          </Styled(CardItem)>
        </Styled(Card)>,
        "onPress": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(CardItem)
              header={true}
            >
              <Styled(H3)>
                Testing title
                 (
                0
                /5)
              </Styled(H3)>
            </Styled(CardItem)>,
            <Styled(CardItem)>
              <Styled(Body)>
                <Styled(Badge)>
                  <Styled(Text)>
                    One
                  </Styled(Text)>
                </Styled(Badge)>
              </Styled(Body)>
            </Styled(CardItem)>,
          ],
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(H3)>
                Testing title
                 (
                0
                /5)
              </Styled(H3)>,
              "header": true,
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Testing title",
                  " (",
                  0,
                  "/5)",
                ],
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Array [
                "Testing title",
                " (",
                0,
                "/5)",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Body)>
                <Styled(Badge)>
                  <Styled(Text)>
                    One
                  </Styled(Text)>
                </Styled(Badge)>
              </Styled(Body)>,
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Badge)>
                  <Styled(Text)>
                    One
                  </Styled(Text)>
                </Styled(Badge)>,
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Styled(Text)>
                    One
                  </Styled(Text)>,
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "One",
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": "One",
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
