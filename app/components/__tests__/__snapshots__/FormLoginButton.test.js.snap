// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Loading has a valid snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormLoginButtonUnwrapped
    email="test@test.com"
    mutate={[Function]}
    password="WELLSECURE1"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Styled(Button)
        onPress={[Function]}
        style={
          Object {
            "backgroundColor": "#ED3E44",
            "flex": 1,
          }
        }
      >
        <Styled(Text)>
          Login
        </Styled(Text)>
      </Styled(Button)>,
      "style": Object {
        "paddingLeft": 15,
        "paddingVertical": 10,
      },
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Text)>
          Login
        </Styled(Text)>,
        "onPress": [Function],
        "style": Object {
          "backgroundColor": "#ED3E44",
          "flex": 1,
        },
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Login",
          "virtual": undefined,
        },
        "ref": null,
        "rendered": "Login",
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Button)
          onPress={[Function]}
          style={
            Object {
              "backgroundColor": "#ED3E44",
              "flex": 1,
            }
          }
        >
          <Styled(Text)>
            Login
          </Styled(Text)>
        </Styled(Button)>,
        "style": Object {
          "paddingLeft": 15,
          "paddingVertical": 10,
        },
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(Text)>
            Login
          </Styled(Text)>,
          "onPress": [Function],
          "style": Object {
            "backgroundColor": "#ED3E44",
            "flex": 1,
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Login",
            "virtual": undefined,
          },
          "ref": null,
          "rendered": "Login",
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
