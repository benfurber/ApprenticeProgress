// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Goal has a valid snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Goal
    details={
      Object {
        "actions": Array [
          "1",
          "2",
        ],
        "description": "Words here about a goal",
        "score": 4,
        "tag": "Team thoughtbot",
        "title": "I set my own direction",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Styled(Header)
          style={
            Object {
              "flexDirection": "column",
              "paddingHorizontal": 30,
              "paddingVertical": 10,
            }
          }
        >
          <Styled(H2)
            styles={
              Object {
                "padding": 20,
              }
            }
          >
            I set my own direction
          </Styled(H2)>
          <Styled(Badge)>
            <Styled(Text)>
              Team thoughtbot
            </Styled(Text)>
          </Styled(Badge)>
        </Styled(Header)>,
        <Styled(Content)
          style={
            Object {
              "paddingTop": 20,
            }
          }
        >
          <ProgressBar
            score={4}
          />
          <Styled(ViewNB)
            style={
              Object {
                "paddingHorizontal": 30,
                "paddingVertical": 10,
              }
            }
          >
            <Styled(Text)>
              Words here about a goal
            </Styled(Text)>
          </Styled(ViewNB)>
          <Styled(ViewNB)
            style={
              Object {
                "paddingHorizontal": 30,
                "paddingVertical": 10,
              }
            }
          >
            <Styled(H3)>
              Actions: 
            </Styled(H3)>
            <Styled(List)>
              <Styled(ListItem)
                style={
                  Object {
                    "marginLeft": 0,
                  }
                }
              >
                <Styled(Text)>
                  1
                </Styled(Text)>
              </Styled(ListItem)>
              <Styled(ListItem)
                style={
                  Object {
                    "marginLeft": 0,
                  }
                }
              >
                <Styled(Text)>
                  2
                </Styled(Text)>
              </Styled(ListItem)>
            </Styled(List)>
          </Styled(ViewNB)>
        </Styled(Content)>,
      ],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(H2)
              styles={
                Object {
                  "padding": 20,
                }
              }
            >
              I set my own direction
            </Styled(H2)>,
            <Styled(Badge)>
              <Styled(Text)>
                Team thoughtbot
              </Styled(Text)>
            </Styled(Badge)>,
          ],
          "style": Object {
            "flexDirection": "column",
            "paddingHorizontal": 30,
            "paddingVertical": 10,
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "I set my own direction",
              "styles": Object {
                "padding": 20,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "I set my own direction",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text)>
                Team thoughtbot
              </Styled(Text)>,
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Team thoughtbot",
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "Team thoughtbot",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <ProgressBar
              score={4}
            />,
            <Styled(ViewNB)
              style={
                Object {
                  "paddingHorizontal": 30,
                  "paddingVertical": 10,
                }
              }
            >
              <Styled(Text)>
                Words here about a goal
              </Styled(Text)>
            </Styled(ViewNB)>,
            <Styled(ViewNB)
              style={
                Object {
                  "paddingHorizontal": 30,
                  "paddingVertical": 10,
                }
              }
            >
              <Styled(H3)>
                Actions: 
              </Styled(H3)>
              <Styled(List)>
                <Styled(ListItem)
                  style={
                    Object {
                      "marginLeft": 0,
                    }
                  }
                >
                  <Styled(Text)>
                    1
                  </Styled(Text)>
                </Styled(ListItem)>
                <Styled(ListItem)
                  style={
                    Object {
                      "marginLeft": 0,
                    }
                  }
                >
                  <Styled(Text)>
                    2
                  </Styled(Text)>
                </Styled(ListItem)>
              </Styled(List)>
            </Styled(ViewNB)>,
          ],
          "style": Object {
            "paddingTop": 20,
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "score": 4,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text)>
                Words here about a goal
              </Styled(Text)>,
              "style": Object {
                "paddingHorizontal": 30,
                "paddingVertical": 10,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Words here about a goal",
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "Words here about a goal",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(H3)>
                  Actions: 
                </Styled(H3)>,
                <Styled(List)>
                  <Styled(ListItem)
                    style={
                      Object {
                        "marginLeft": 0,
                      }
                    }
                  >
                    <Styled(Text)>
                      1
                    </Styled(Text)>
                  </Styled(ListItem)>
                  <Styled(ListItem)
                    style={
                      Object {
                        "marginLeft": 0,
                      }
                    }
                  >
                    <Styled(Text)>
                      2
                    </Styled(Text)>
                  </Styled(ListItem)>
                </Styled(List)>,
              ],
              "style": Object {
                "paddingHorizontal": 30,
                "paddingVertical": 10,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Actions: ",
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "Actions: ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Styled(ListItem)
                      style={
                        Object {
                          "marginLeft": 0,
                        }
                      }
                    >
                      <Styled(Text)>
                        1
                      </Styled(Text)>
                    </Styled(ListItem)>,
                    <Styled(ListItem)
                      style={
                        Object {
                          "marginLeft": 0,
                        }
                      }
                    >
                      <Styled(Text)>
                        2
                      </Styled(Text)>
                    </Styled(ListItem)>,
                  ],
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(Text)>
                        1
                      </Styled(Text)>,
                      "style": Object {
                        "marginLeft": 0,
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "1",
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": "1",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(Text)>
                        2
                      </Styled(Text)>,
                      "style": Object {
                        "marginLeft": 0,
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "2",
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": "2",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(Header)
            style={
              Object {
                "flexDirection": "column",
                "paddingHorizontal": 30,
                "paddingVertical": 10,
              }
            }
          >
            <Styled(H2)
              styles={
                Object {
                  "padding": 20,
                }
              }
            >
              I set my own direction
            </Styled(H2)>
            <Styled(Badge)>
              <Styled(Text)>
                Team thoughtbot
              </Styled(Text)>
            </Styled(Badge)>
          </Styled(Header)>,
          <Styled(Content)
            style={
              Object {
                "paddingTop": 20,
              }
            }
          >
            <ProgressBar
              score={4}
            />
            <Styled(ViewNB)
              style={
                Object {
                  "paddingHorizontal": 30,
                  "paddingVertical": 10,
                }
              }
            >
              <Styled(Text)>
                Words here about a goal
              </Styled(Text)>
            </Styled(ViewNB)>
            <Styled(ViewNB)
              style={
                Object {
                  "paddingHorizontal": 30,
                  "paddingVertical": 10,
                }
              }
            >
              <Styled(H3)>
                Actions: 
              </Styled(H3)>
              <Styled(List)>
                <Styled(ListItem)
                  style={
                    Object {
                      "marginLeft": 0,
                    }
                  }
                >
                  <Styled(Text)>
                    1
                  </Styled(Text)>
                </Styled(ListItem)>
                <Styled(ListItem)
                  style={
                    Object {
                      "marginLeft": 0,
                    }
                  }
                >
                  <Styled(Text)>
                    2
                  </Styled(Text)>
                </Styled(ListItem)>
              </Styled(List)>
            </Styled(ViewNB)>
          </Styled(Content)>,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(H2)
                styles={
                  Object {
                    "padding": 20,
                  }
                }
              >
                I set my own direction
              </Styled(H2)>,
              <Styled(Badge)>
                <Styled(Text)>
                  Team thoughtbot
                </Styled(Text)>
              </Styled(Badge)>,
            ],
            "style": Object {
              "flexDirection": "column",
              "paddingHorizontal": 30,
              "paddingVertical": 10,
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "I set my own direction",
                "styles": Object {
                  "padding": 20,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "I set my own direction",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Text)>
                  Team thoughtbot
                </Styled(Text)>,
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Team thoughtbot",
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "Team thoughtbot",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <ProgressBar
                score={4}
              />,
              <Styled(ViewNB)
                style={
                  Object {
                    "paddingHorizontal": 30,
                    "paddingVertical": 10,
                  }
                }
              >
                <Styled(Text)>
                  Words here about a goal
                </Styled(Text)>
              </Styled(ViewNB)>,
              <Styled(ViewNB)
                style={
                  Object {
                    "paddingHorizontal": 30,
                    "paddingVertical": 10,
                  }
                }
              >
                <Styled(H3)>
                  Actions: 
                </Styled(H3)>
                <Styled(List)>
                  <Styled(ListItem)
                    style={
                      Object {
                        "marginLeft": 0,
                      }
                    }
                  >
                    <Styled(Text)>
                      1
                    </Styled(Text)>
                  </Styled(ListItem)>
                  <Styled(ListItem)
                    style={
                      Object {
                        "marginLeft": 0,
                      }
                    }
                  >
                    <Styled(Text)>
                      2
                    </Styled(Text)>
                  </Styled(ListItem)>
                </Styled(List)>
              </Styled(ViewNB)>,
            ],
            "style": Object {
              "paddingTop": 20,
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "score": 4,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Text)>
                  Words here about a goal
                </Styled(Text)>,
                "style": Object {
                  "paddingHorizontal": 30,
                  "paddingVertical": 10,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Words here about a goal",
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "Words here about a goal",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(H3)>
                    Actions: 
                  </Styled(H3)>,
                  <Styled(List)>
                    <Styled(ListItem)
                      style={
                        Object {
                          "marginLeft": 0,
                        }
                      }
                    >
                      <Styled(Text)>
                        1
                      </Styled(Text)>
                    </Styled(ListItem)>
                    <Styled(ListItem)
                      style={
                        Object {
                          "marginLeft": 0,
                        }
                      }
                    >
                      <Styled(Text)>
                        2
                      </Styled(Text)>
                    </Styled(ListItem)>
                  </Styled(List)>,
                ],
                "style": Object {
                  "paddingHorizontal": 30,
                  "paddingVertical": 10,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Actions: ",
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": "Actions: ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Styled(ListItem)
                        style={
                          Object {
                            "marginLeft": 0,
                          }
                        }
                      >
                        <Styled(Text)>
                          1
                        </Styled(Text)>
                      </Styled(ListItem)>,
                      <Styled(ListItem)
                        style={
                          Object {
                            "marginLeft": 0,
                          }
                        }
                      >
                        <Styled(Text)>
                          2
                        </Styled(Text)>
                      </Styled(ListItem)>,
                    ],
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "0",
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(Text)>
                          1
                        </Styled(Text)>,
                        "style": Object {
                          "marginLeft": 0,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "1",
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": "1",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "1",
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(Text)>
                          2
                        </Styled(Text)>,
                        "style": Object {
                          "marginLeft": 0,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "2",
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": "2",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
